{
  "posts": [
    {
      "content": "# 点的距离\r\n主要探讨切比雪夫距离和曼哈顿距离的关系。最基本的定义：有两个点记作 $(x_1,y_1),(x_2,y_2)$，两个点的曼哈顿距离是 $|x_1-x_2|+|y_1-y_2|$，切比雪夫距离是 $\\max(|x_1-x_2|,|y_1-y_2|)$。二者有密切联系，有图：\r\n\r\n![](https://s2.ax1x.com/2019/06/19/VOZvLT.png)\r\n\r\n这张图说得非常精辟。蓝点对应的是与红点的曼哈顿距离恰好为 $3$ 的点集，而把所有点旋转 $45^\\circ$ 后，原来的曼哈顿集合就变成了切比雪夫集合。可以知道坐标转移关系是 $(x,y)\\Rightarrow(x+y,x-y)$。相似地，可以知道切比雪夫距离转曼哈顿距离的关系是 $(x,y)\\Rightarrow (\\frac{x+y}{2},\\frac{x-y}{2})$。前者的距离就相当于后者在转移后的点上的距离，这是一个很重要的结论。\r\n\r\n[P3964](https://www.luogu.com.cn/problem/P3964)：切比雪夫距离转曼哈顿距离后枚举点即可。\r\n\r\n[P5098](https://www.luogu.com.cn/problem/P5098)：曼哈顿距离转切比雪夫距离后贪心即可。\r\n\r\n[AT](https://atcoder.jp/contests/code-festival-2017-quala/tasks/code_festival_2017_quala_d)：由于洛谷题号混乱导致我不知道应该如何称呼一道 AT 的题目。考虑到一个点的曼哈顿集合是个斜着的菱形，十分不好处理，于是转化成切比雪夫距离后就比较清晰了。需要注意的是分组的时候要保证坐标是正数（不然位运算会出问题），统一加上一个 $n$ 即可。\r\n\r\n[P3439](https://www.luogu.com.cn/problem/P3439)：转成曼哈顿距离后运用小学奥数芝士即可得出答案。要注意求出的点需要波动一下，以及要用 `__int128`，就比较魔怔。\r\n\r\n[P2906](https://www.luogu.com.cn/problem/P2906)：一道比较综合的题目。题意是说将两个曼哈顿距离不超过给定值的点归入同一集合，问集合数量以及最大集合大小。显然用并查集维护。先把曼哈顿距离转成切比雪夫距离，然后限制就变成了横坐标之差和纵坐标之差均不超过给定值。有个结论，按照横坐标排序之后每个点只需要往左上第一个点和左下第一个点连边就可以保证正确性。证明上考虑假如按顺序有 $A,B,C$ 三个点，$A$ 是 $C$ 左上第一个，$B$ 是 $C$ 左上更高的点，会发现 $B$ 一定会去发现 $A$，这样一来三个点就还是联通的。所以用 set 或者平衡树来维护即可（我用的 set），要注意的是把 pair 压成整型时一定要考虑是否会炸掉，以及第一关键字是否可能是负数（涉及取模方式）。\r\n\r\n[P5193](https://www.luogu.com.cn/problem/P5193) 上面那道题的双倍经验。\r\n\r\n参考：[link1](https://www.luogu.com.cn/blog/xuxing/Distance-Algorithm)",
      "data": {
        "title": "其它技巧",
        "date": "2022-10-31 16:45:51",
        "tags": [
          "笔记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "qi-ta-ji-qiao"
    },
    {
      "content": "# 高维前缀和\r\n又叫 SOSdp。一般而言可以使用高维前缀和来统计形如： $s_x=\\sum\\limits_{y\\&x=y}a_y$  的问题。代码上的形式如下：\r\n\r\n```cpp\r\nfor(int i=0;i<20;++i)\r\n\tfor(int j=0;j<n;++i) \r\n        if((1<<i)&j) S[j]+=(S[j^(1<<i)]);\r\n```\r\n\r\nCF449D：考虑求有多少子集与起来不为 $0$。令 $num_x$ 为包含 $x$ 的数的数量（可以用高维前缀和求得），那么与的结果包含 $x$ 的方案数 $f_x=2^{num_x}-1$，于是使用子集反演可以求出有多少子集与起来不为 $0$，用总数减即可。复杂度 $O(N\\log N)$。\r\n\r\nP6442：相似地，令 $num_x$ 为 $x$ 包含的数的个数，那么结果被 $x$ 包含的方案也就是 $f_x=2^{num_x}-1$。然后反演可以求出有多少方案没有包含所有数，然后就可以得出答案了。\r\n\r\nCF383E：一个东西不多说。",
      "data": {
        "title": "动规技巧",
        "date": "2022-10-31 16:45:10",
        "tags": [
          "笔记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "dong-gui-ji-qiao"
    },
    {
      "content": "# Prufer\r\n有标号无根树和 prufer 序列形成双射的关系。所以有一些性质。\r\n\r\n其构造方式是拿一棵树出来，它有许多叶子。找出这些叶子中编号最小id，记录下它的父亲，丢掉。重复这一过程，会得到一个长度为 $m-2$ 的序列，即 prufer 序列。用堆可以做到单 log，当然也有线性做法（如果它丧心病狂想卡的话），懒得记。\r\n\r\n但是这玩意更多是用在无根树的计数方面。它具有很好的性质：每个元素都是可以取到 $[1,m]$ 中的任意数，独立的，即无根树的数量是 $m^{m-2}$。还有一个性质是一个点在树中的度等于序列中出现次数加一。主要是这两个性质，有几个比较基础的应用：\r\n\r\n[P4430](https://www.luogu.com.cn/problem/P4430) 无脑板子。树的形态有 $m^{m-2}$ 种，边的顺序有 $(m-1)!$ 种，乘起来即可。\r\n\r\n[P2290](https://www.luogu.com.cn/problem/P2290) 板子。根据性质可以确定每个点在 prufer 序列中的出现次数，简单组合即可。然后有一些需要注意的边角情况但不重要。\r\n\r\n[P4981](https://www.luogu.com.cn/problem/P4981) 板子，直接输出 $m^{m-2}$ 即可。\r\n\r\n[CF156D](https://www.luogu.com.cn/problem/CF156D) 一道比较综合的题目。 [link](https://www.luogu.com.cn/blog/chuan-liu-bu-xi/cf156d)",
      "data": {
        "title": "简单树论",
        "date": "2022-10-31 16:42:10",
        "tags": [
          "笔记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jian-dan-shu-lun"
    },
    {
      "content": "# AC 自动机\r\nAC 自动机是更高维的 kmp。构造方法感觉更像是运用了 dp 的思想，先对所有模式串建立一棵 Trie 树，然后考虑某个节点 $x$，有个 $w$ 的后缀，考虑如何去求它的 fail 值。于是就有了 AC 自动机的核心代码：\r\n\r\n```cpp\r\nint x=q.front(),ff=t[x].fail;q.pop();\r\nfor(int i=0;i<26;i++)\r\n\tif(t[x].nxt[i])t[t[x].nxt[i]].fail=t[ff].nxt[i],q.push(t[x].nxt[i]);\r\n\telse t[x].nxt[i]=t[ff].nxt[i];\r\n```\r\n\r\n单纯匹配的题有 [第一块板子](https://www.luogu.com.cn/problem/P3796)。\r\n\r\n比较无脑的就是可以在 AC 自动机上 DP，和在 kmp 自动机上 DP 是同一个道理。[P4052](https://www.luogu.com.cn/problem/P4052) 是板子，套路是以当前匹配到的位置 $x$ 作为状态进行转移，决策就是下一个字符放啥，然后正常转移即可，在这道题中的限制就是不能转移到有 end 的节点，把这些点忽略即可。显然它是可以用矩阵来描画的，[P3041](https://www.luogu.com.cn/problem/P3041) 是矩阵快速幂优化 DP 套 AC 自动机，缝合题。[P7456](https://www.luogu.com.cn/problem/P7456) 不能算是 AC 自动机上 DP，而只能算是帮助 DP，不知道应该归到哪里。\r\n\r\n一般的题目都会用到 fail 树的性质。自动机上每个点往 fail 对应的点上连边，显然最后会形成一棵树（每个点只会往更浅的点连接）。有一个显然的性质是，对于一个节点 $x$，它到根的路径可以看成是 kmp 的一个匹配过程，所以实际上这些点的串都是 $x$ 串的后缀，这就非常有用了。在 [第二块板子](https://www.luogu.com.cn/problem/P5357) 中，我们现在停留在 $x$，那么实际上达到的效果是点到根所有点对应的串都出现了一次，然而暴力去找显然是不行的。于是可以找每个点出现的次数，然后回答的时候可以看成是一次子树求和（因为子树内的值会对它产生贡献）。[P3966](https://www.luogu.com.cn/problem/P3966) 也是一个意思。\r\n\r\nfail 树也是树，所以可以树剖，这牵扯到一个性质。首先根据字典树的原理，一个节点在字典树上到根的所有节点形成了它的前缀集合，而一个串在另一个中出现可以看成前者是后者前缀的后缀。而前面也说了，$A$ 是 $B$ 后缀表现为在 fail 树上 $B$ 是 $A$ 子树中的节点，所以要统计一个串在另一个串中出现了几次，就只需要把后者到根（字典树上）的所有点标记一下，然后查找前者子树中有多少个标记节点即可，用树状数组可以维护。[P2414](https://www.luogu.com.cn/problem/P2414) 就是这个方法，一个结论是说对于题目中所言的过程，虽然串的总长度可能很大，但建出来的 Trie 树不会太大（甚至可以边输入边建树）。把所有 $y$ 离线下来排序之后按顺序回答就可以保证修改的次数是线性的，这样一来就可以用上面那种方法了，复杂度有一只 log。[CF163E](https://www.luogu.com.cn/problem/CF163E) 会更简单一些，当前匹配到的点的贡献是 fail 树上点到根的权值之和，所以说修改操作就是单点修改，询问就是链查询，转化成子树修改单点查询即可，树状数组维护，一只 log。",
      "data": {
        "title": "简单字符串",
        "date": "2022-10-31 16:41:07",
        "tags": [
          "笔记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "jian-dan-zi-fu-chuan"
    },
    {
      "content": "## Day $\\le −3$\r\n\r\n**2022.08.10** 开坑。名已经报了，但教师审核还未通过。管他呢！\r\n\r\n**2022.09.16-17**  由于初赛是线上进行，一直在准备设备。一开始打算直接用手机监考，到了前一天晚上突然发现安卓底层有对文件的 4GB  限制，结果就是录了五十分钟就会自己停止。那不就完了吗，虽然可以用软件分几段录之后拼起来，但还是感觉不保险。于是就去借了个MacBook  Air，学习使用苹果系统一个小时，然后研究如何解决其卡死问题一个小时，一直准备到当天中午仍不确定它是否能稳定运行。于是初赛的时候心神不宁，最后好在没出事。考后发现有许多人都是这样把视屏分成几段。维生素B。\r\n\r\n **2022.09.18** 初赛，没什么好说的。今年的题感觉比去年简单一些，但更奇怪一些。前面考了一些底层的问题，只能算是可以接受；后面一堆奇怪的题目就很高妙。什么宇宙射线轰击基数排序，什么两个人做八个人的作业的经典永流传，什么对负数取对数，什么输出用 O(?)，什么 `for(int j=0;j<=m;j*=2)`，出题人绝对是喝高了。当时看到那个写作业的题怎么算怎么是 $105$，甚至还换了四种方法，算到后面都绝望了。然后就是程序填空出得没有任何区分度，什么玩意啊。今年为什么那么多排序，除了排序就是排序，出题人怕不是只学了一分钟 OI 吧。好傻逼的一套题，无以复加了。\r\n\r\n **2022.09.27** 从十二点半开始等。三个浏览器同时开几十个网页去刷，属于是广撒网行为。但还是搞了两个小时才刷出来分数，显然CCF的服务器被宇宙射线崩了。刚好是 $90$ 分，不是一个多好看的分数，但并不重要。\r\n\r\n **2022.09.28** 傍晚终于出线了，S 组 $55$，J 组 $65$。和预想中的稍微有点不同，但说真的确实不是很高。顺便吐槽四川大鸽子，这么晚才出线。\r\n\r\n**2022.09.30** 在疫情中艰难的生存中。昨天晚上一个室友发烧被带走了（他甚至六天没做核酸），今天有个绵阳来的同学被拉去隔离了（昨天绵阳貌似封城了）。前路艰且远，泥泞不堪。\r\n\r\n **2022.10.14** 终于能缴费了。特派员大鸽子，睡了两周不上班，差评。\r\n\r\n**2022.10.24** 终于出准考证号了。并知道在高新考。和 zyc 大佬和 zsq 大佬一个考场，那不妥妥被虐啊。\r\n\r\n## Day $\\in[-2,-1]$\r\n\r\n**2022.10.27** 根据 kkk 的帖子，全国有许多许多地方的提高组都取消了，包括上海江苏山东等（江苏似乎又活了），留下了的省份，比如四川，显得弥足珍贵。每天都要去做核酸，还是单检，于是魔幻的是校内在统一做核酸的时候我们在旁边打乒乓球，等他们做完了我们再统一到校门外去做。下午考了个试，由于 ygg 想要模拟评测环境于是在 Linux 下测，由于某些原因出现了一车的锟斤拷，乐。然后就没有然后了，至少我是没有心思复习了，按照某大佬的话说当天晚上是\r\n\r\n> csp 之前全机房都在摆烂的说。\r\n>\r\n> 麻将 $\\times 4+$ 原神 $\\times 1+$ gridea  $\\times 4+$ 红警 $\\times 4+$ 猫国 $\\times 1+$ 虚拟机 $\\times 1+$ 散步$\\times 1+$ 看戏 $\\times 2+$ 卷题 $\\times 1=$全机房\r\n\r\n总之都很强。概括起来就是卧龙凤雏。\r\n\r\n**2022.10.28** 根据 kkk 的帖子，一些地方的 CSP 有了变动，那张密密麻麻五颜六色的地图看得我头疼。中午还是打球，做核酸，睡觉，下午讲了些注意事项，似乎就没有什么了。听说前些年有人趁人不注意改了自己和他人的 cena，就很强，然后说什么如果有代码加水印的习惯的话也可以用。然后林林总总，我反正在下面摸鱼。最重要的是这么多年以来周五竟然可以放学，感动，非常感动。看了看奇怪的语法在 14 上的支持情况，写了两个水题，然后一天就又过去了。\r\n\r\n## Day $1$\r\n\r\n不到九点就起床了。出去买了咖啡和巧克力下午用。 然后就是颓废时间，看了一些板子。顺便记录一下押的题，应该会有一个比较难的字符串，也就是说要么是 kmp 要么是 AC 自动机（真的真的会考 SAM 吗）；我猜它会考图的连通性问题而且难度不低；如果考 DP 那么不会太难，数据结构说不定也不是考察的重点，如果考到了笛卡尔树就属于是属于是了，如果考到切比雪夫距离或者 prufer 或者最小表示法就属于撞大运了。贪心和博弈论还是少考为妙，毕竟我在这两个领域还没下过什么功夫。不论如何希望它能考到一些我会的东西，当然不能比去年低是底线。然后最后这几个小时也不是很想干什么了，于是开始摆烂。\r\n\r\n然后中午就把咖啡全部喝完了。下午只好买了茶 $\\pi$，有一种梦回中考的感觉。魔幻。然后就可以进校园了，高新的校园很漂亮（主要是大，或者说气派），机房的格局比较紧凑，似乎很方便同学们之间不合时宜地借鉴代码。然后就等啊等等到了开考。\r\n\r\n下面这几段话是在第二天的早上两点写的。知周所众我对咖啡因非常敏感。\r\n\r\n开考先看了题，感觉似乎没什么数据结构和字符串的题，倒是有很多图论。心里谈不上是轻松还是紧张。花两分钟打了快读和文件的板子放在那里，接着就开始顺序开题，然后第一题卡住了，十五分钟毫无思路。然后发现只需要枚举中间两个点，然后剩下的点几乎是可以贪心地选择，由于数据规模比较小甚至可以跑个全源最短路（广搜即可），并在 $15:19$ 过了大样例，还是比较慢。T2 一开始读错题了，以为两个人同时选，心想这玩意不是不可做嘛。然后重新读了题，发现是有先后顺序的。显然第二个人会贪心地去选择，这不就非常板子了吗，用线段树或者其它什么东西维护一下就可以了。$15:32$ 到 $16:04$ 写了半个小时并过了大样例。\r\n\r\nT3 第一反应是题面好长啊，不会是什么大模拟吧。然后耐心地读了读题，发现不太对，似乎就是一个基环树。感觉非常正确，又看了看样例解释，更加坚定了自己的想法，又重新读了题，如是几次才终于确定出题人把一句话可以说明白的题意扩写成了满满两页纸这一事实。然后就僵住了，脑子突然变得不灵活了。显然会想到通过判断边的数量来看是不是基环树森林，然而这玩意并不是非常好维护。然后又往图的连通性上去思考（考前准备那么多的东西把人都给弄魔怔啦），然后发现似乎没有什么算法可以动态维护图的信息，即使有也不可能是提高组会考的东西。然后就这么拖到了五点一刻左右，合着思考了一个小时毫无进展，甚至一度崩溃想到要去拿 $60$ 分走人。突然灵光一现，有没有可能可以从定义出发，维护有出边的点的集合呢。然后就可以哈希了呀。显然是很好写的，二十分钟就写完走人了。希望希望不会被卡。\r\n\r\n写完 T3 离考试结束已经只剩四十分钟了。心一横，打暴力算了，虽然感觉说不定自己可以写出来，但那是需要建立在 T3 再匀出来半个小时的基础之上的。然后就打了个比暴力还暴力的程序上去，此时还有十分钟。检查文件，上虚拟机，检查 cena，一顿操作下来就快打铃了，于是就开摆了。\r\n\r\n外面下了小雨，我独自一人往外走着，人潮汹涌。路上问了问 syh 的情况，然后和其他人有一句没一句地聊了两句。CSP 就这么平平淡淡地结束了，没有掀起一丝波澜，和去年一模一样。同样的夜，同样的雨，同样的喜马拉雅。夜深了，雨潇潇下。\r\n\r\n## Day $\\ge 2$\r\n\r\n**2022.10.30** 去洛谷测了，T1 挂了，没判连通性就只有 $90$ 分。怎么说呢怎么说呢，我终究是傻逼了。如此低级的错误竟然没有发现，果然应了之前的那句话“ZC 是没有脑子的”。希望 CCF 造数据的时候大发慈悲，卡掉的分在 $20$ 分以内都是可以接受的。T2T3 倒是没出什么岔子，毕竟两道题都挺板的（但为什么我还是浪费了那么多时间啊啊）。T4 在洛谷上有 $52$ 分。妙妙屋。稍微看了下似乎人均 $360$，那不直接寄麻了。呜呜呜。",
      "data": {
        "title": "CSP2022划水记",
        "date": "2022-10-28 08:42:22",
        "tags": [
          "游记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "csp2022-hua-shui-ji"
    },
    {
      "content": "有史以来发生在我身上的最令人感动也最令人震撼的事情，理应写一篇游记。\r\n\r\n### Day $\\in$ $(-N,-3)$\r\n- **2022.03.04** 骚哥走了，象征着一切别离的开始，为毕业季拉开了帷幕。\r\n- **2022.03.06** 百日誓师，虽然活动开得很无聊，但有其存在的价值。林轶睿那句极其经典的“让我们拿起笔，加入他们”令我印象深刻。\r\n- **2022.03.14&15** 直升考，考得一塌糊涂，考得不知所以然，这体型创新创得好啊。老师们口中念叨了三年的直升考突然就这么来了，忽然感觉中考也近了。\r\n- **2022.03.22** 体育模拟考。我个人是比较顺利的，但也仅限于“比较”。\r\n- **2022.03.25** 直升宣讲会。和所有学校的所有宣讲会一样，对数据进行小筛选，力图证明自己的优秀；不知可否，虽然其中有一些东西我看不太下去，但也就那样。文君姐姐要继续担任双导班数学老师的决定吓死个人。\r\n- **2022.03.30&31** 名义上是“中考模拟考”，但据我们推测这大概率会是七八一对没有签约的同学的敲打，于是乎题量有那么一点大，于是乎化学数学英语都没怎么做完，太悲惨了。\r\n- **2022.04.04** 体考时间出来了，是15号下午，当天去了一个奇怪的运动公园模拟体考。成绩公布了，莫名其妙考了初中第四个年一。\r\n- **2022.04.18** 下午体考。中午的时候下了几天的雨突然就停了，太阳忽然就出来了，令人十分惊喜。总体来说很顺利，七万看上去的确是个好地方，考满还是比较容易的。\r\n- **2022.04.20&21** 二诊。中考前的最后一次大型考试，考后感觉极其糟糕。\r\n- **2022.04.26** 物理化学的实验操作考试，考得很水，虽然我由于脑残出现了严重失误（比如应该报告空气与呼出气体氧气量的差异我却说的是二氧化碳的差异），但应该不会扣分（看监考老师和蔼可亲的样子）。二诊成绩出来了，彻底炸裂，别的科目不说单单是37的语文作文就够了。\r\n- **2022.04.27** 政治历史模拟考试。就那样，两科都压线过的。\r\n- **2022.05.20** qzby第一届学生节，蛮好玩的，当然那些躲在教室内卷的人可能不这么认为。\r\n- **2022.05.24** 政治历史会考。\r\n- **2022.05.26&27** 中考的模拟考。考得就那样，比二诊的时候状态好一点但也没好到哪里去。然后就是27号指标到校的xdx离开了我们。\r\n- **2022.06.01** 政治历史会考出成绩，全班满分，儿童节惊喜之一。然后就地震了，儿童节惊喜之二。虽然听起来很别扭但这就是事实。\r\n- **2022.06.02** 度过了初中最后一节体育课。\r\n- **2022.06.07&08** 两天网课，集体划水。\r\n\r\n### Day $\\in$ $(-4,0)$\r\n- **2022.06.10** 快考试了。于是老师把我们一年前写的信给发下来了。我靠我为什么那么二。由于退队仪式的时候塞进去了一根红领巾，此后两天就有很多很多人戴起了红领巾，能算是一种回光返照？\r\n- **2022.06.11** 后天就考试了。于是我们上了最后一节语文，数学，英语，物理，化学，各科老师一反常态地温柔。有同学（还不少）号召大家往校服上签字，黑板上也留有名姓。下午大扫除，本人为了背水一战破釜沉舟遂丢弃所有复习资料。得到了八年级同学的“欢”送，颇为感动。然后就告别了九年级六班的教室，抱着一大堆词典字典，离开了那里。\r\n- **2022.06.12** 下午看考场。没有什么好说的，在大太阳底下晒了许久才得以进入。铁中的配置真的不咋地，桌子是摇的，而且这个南北楼和只有一半门的厕所实在令人印象深刻。\r\n\r\n### Day $\\in$ $(0,3)$\r\n- **2022.06.13&14** 正式中考。每天一瓶茶Π，撕了包装跟niao一样，好处就是没有人会偷喝lia。每天找老邓要准考证，大家一起加油，然后进去，等一会之后被放进考场。靠为什么我的笔袋拉链是金属。考语文的时候被作文搞蒙了，物理被实验题考蒙了，化学被炼铁的那道题考蒙了（然后今年还没有推断题，压轴题一个都没压中），回来后还发现自己错了个选择题，玩个屁啊玩。第二天数学浏览了一下卷子，感觉非常简单于是定下了求稳的战略，然后发现b卷似乎不那么友好，然后题就没做完。英语比较简单，但表格题太阴险了。然后就没了。感觉很糟糕，能上630就可以了。\r\n\r\n### Day $\\in (2,N)$\r\n- **2022.06.15&16** 颓废的两天，每天八小时哔哩哔哩。想象得出来吧。\r\n- **2022.06.17** 下午毕业典礼。节目确实没有什么好看的，主要是晚上的聚餐，场面十分狂野（特别是以多吉为代表的某些人）。本人喝的不多，三瓶鸡尾酒和两瓶啤酒。席散之后各自离场，一群人大晚上在班群里哭着分别。\r\n- **2022.06.28** 出成绩。在机房里没法看家长的短信，网站又频繁爆出接口错误，一直到十点十分才查到。考得不如人意，主要语文只有113。今年全成都都考得很好，我只能是勉强排进前一千名，就很悲惨。听说成都有考到680的，班上考上650的也有不少人，hjj都上640了（没有鄙视的意思啊）。\r\n- **2022.07.11** 好久好久没有更新过这个游记了，许多许多事情都已经尘埃落定了，记录一下吧。lsr去了九中宁夏，她应该是我们班考得最好的。yhw大佬去了四中，lsy因为竞赛去了四中，xsw应该也差不多，pyh和lzh手拉着手去了四中（lzh也是上了650的人，为了班型留在文庙实在不是个好理由）。lct去了七高，他曾经觉得自己将会在781度过一辈子；hjj和hlx说不定在七高可以继续同桌，好怀念他们在我后面互损的时光。lzy也去了七高，他的水平总是不用质疑的，由于七高和七林一起夏令营今天中午和他们一起吃了饭逛了会，然后各自散去了，甚至没有说再见（也可能是我记错了）。syh，lsx和wycf去了九中光华，也是一个挺不错的结局，yxy和lmy去了北湖，还是有些令人难过，一个是极其自信的传奇，一个是我三年的记忆。zxq留在781，感觉也挺好的，反正她开心最好。dj，dty，tdy也留在那里，并着许多人，myh，hxy，hzx，以及中考因为体育失分的zyc，还有fxy，许许多多人即将继续他们的故事。指标到校的xdx，zxh，why已经在七万准备夏令营了，还记得离别时他们的眼神。jcy和byy在遥远的重庆准备属于他们的考试，dtw在更加遥远的西藏演绎着他的故事，城市的某个角落mey在挥舞画笔。其它班，lyr还是牛逼，那句“拿起笔加入他们”仍旧是我对初中最后一学期最深刻的回忆之一，他和二班的另一位大佬xzy考入七林，于是全年级开始佩服mys的领导才能。zsy也去了七高和lhy一起，syh不知为何没有把握机会，可能大家都把希望寄托在三年后吧。同她一起的还有许多四班人，据说有cyc等。留在781的外班人也不是，比如ldr，那个名字总是令人印象深刻的傻小子，还有好多好多人。jwy好像去了九中，lct和zyc最终都放弃了这个想法，颇有三国演义卷尾词的感觉。认识十年了，我所知道的是lxz去了781，我们终究还是没能见面。gzj去了七中英才，其他的我就不得而知了。还有许许多多人我不知道去了哪里，兴许他们也不打算让我知道。很久之前写过一段话，说有那么一些数字，记录它只需要六个比特，得到它却需要花费整整六年。qzby门口扬起了许多尘埃，八一湖畔的那排直挺挺的树应该会增添几圈年轮。一个故事的结束，希望是另一段故事的开始。但是，这事又有谁知道呢，只是留下我越来越难过。",
      "data": {
        "title": "2022中考记",
        "date": "2022-10-28 08:41:46",
        "tags": [
          "游记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "2022-zhong-kao-ji"
    },
    {
      "content": "只能说我太菜了。\r\n### day -N\r\n记得那是一个遥远的中午，突然说初中生也可以参加NOIP了，顿时十分一言难尽……\r\n\r\n当时组委会批准了本校六个同学参加，我侥幸名列其中。其它还有五个大佬，本班的zyc，syh，lsy，四班的xsy和crh。\r\n\r\n然而我毫无准备。今年第一次csp-s刚好碰上了极度不正常的一次，基本上来说都还可以除了第四题。于是在run气的加持之下糊里糊涂压线混了个一等。但NOIP那就是另说了，那是真真正正的比赛诶，跟一群高中的考那还van个p。\r\n\r\n整个人都不好了。\r\n### day$\\in[-N,-\\frac{N}{2}$]\r\n我曾经天真地认为提高考完了之后就彻底完了……\r\n\r\n我还是太年轻了。就很奇怪，很多时候我感觉我很老，但另一些时候我又感觉我还太年轻了，不奇怪吗。\r\n\r\n于是又被迫进行了短期集训，考了许多次试，而且一如既往地考得xi pie。信心全无哉。\r\n### day -2\r\n考点直到考试前几天才出来，然后考点的防疫要求更是考前两天才出来。下载下来\r\n### day -1\r\n周六考试，周五晚上当然要好好地休息一下。但总感觉早睡早起这件事并没有任何仪式感可言，于是脑子一抽去买了个U盘。鬼知道我怎么想的，此段略过。\r\n### day 1\r\n考试时间不太友好，八点半开考八点钟报道，于是天未大亮就要出发，其实这些都还好。\r\n\r\n然后在那里坐着。键盘感觉不咋地，不过好歹是win10的系统。成外真是个奇妙的地方。\r\n\r\n间隔隔得很开，毕竟防疫要求，而且四川今年好像的的确确有作弊的xxs。如坐针毡中，他们把题发下来了。\r\n\r\n第一题很水，打表加二分轻松水过。第二题嘛……似乎有思路却又似乎没有。于是秉承着和考提高组时一样的战略，我决定去硬钢T3。\r\n\r\n不得不说我感觉我的开题顺序可能在全中国也能算是独树一帜的了。一个小时一个小时地过去了，我感觉我找到了方法。经过了一大堆观察和推论，我发现不论这个序列如何变幻，得到的序列相邻元素之差构成的可重集与原序列是相同的，也就是说操作了一个数相当于交换了它和左右两个数的差。于是这个问题就变成了一个元素确定的序列问题。然后……我就走偏了，尝试使用一些奇怪的数论，甚至想用数据结构维护（都怪之前做过的一道名为方差的线段树题），然后就开始暴力拆公式，一个半小时毫无进展，心情极度郁闷。于是出去上了个厕所，回来一看，对啊，贪心啊。既然是方差，那么肯定元素越集中越好啊，肯定是越向中间元素靠拢肯定越好啊，转化成差分序列上，就是要求它是一个单谷序列不就好了吗，又加上元素取值范围比较小，那不就可以进行dp了吗……理想很丰满现实很骨感，写了一个小时之后毫无进展。时间已经不多了，为了保命，按着这个思路打了个暴搜就去骗T2的分了。\r\n\r\n但问题在于，由于太过于垃圾，我T2连一分都没骗到，打了个暴力连样例都没通过，一下子整个人都不好了……时间只剩下了半个小时，T4那个阴间题面我连读都不想读，于是就有了行为艺术的诞生。最终，铃响了，我的第一次NOIP就这样悲催地落下了帷幕。\r\n\r\n临走时还给每个人发了个小饼干，虽然我没吃就塞给了zyc，但主办方的心意我还是领略到了，虽然内心更加悲哀了。\r\n\r\n然后就自己回去了。发现整个周末都很颓废，whk作业差点都没写完。郁闷。感觉离退役不远了。\r\n\r\n哇啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊~~~~~~~~~~~~~~\r\n\r\n- update.2021.11.21 去洛谷上测了代码。T1过掉，T2不出意外地零分，T3有点惊喜暴力72分，T4懒得测了，反正都知道是编译错误。没爆零就是我的功德啊。去小图灵上kang了一下，预测的也是172分，还说我可能一等。奇奇怪怪诶。\r\n- update.2021.11.26 才想起来贴题面和代码。[我的考场代码](https://files.cnblogs.com/files/blogs/697493/NOIP2021%E4%BB%A3%E7%A0%81.zip)  [题面](https://files.cnblogs.com/files/blogs/697493/NOIP2021%E9%A2%98%E9%9D%A2.zip)\r\n- update.2021.11.27 把自己的T4代码投稿给了奇葩代码集萃并被采纳（有一点点兴奋）：[链接](https://www.luogu.com.cn/paste/uy9gn19z)\r\n- update.2021.11.30 终于可以查分了，然鹅不出意外的（不得不说luogu和小图灵的数据真的挺准）是100+0+72+0。还好吧，一句话：爆搜万岁！\r\n- update.2021.12.03 悲惨的一天。先是得知一等奖分数线是150，当时自然是喜不自禁，赶回家之后赶忙查看获奖名单，然后并木有我的名字，当时便感觉不妙，后来得到确切消息说，初中生不给评奖，只有成绩证明。郁闷。太郁闷了。",
      "data": {
        "title": "NOIP2021颗粒无收记",
        "date": "2022-10-28 08:41:22",
        "tags": [
          "游记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "noip2021-ke-li-wu-shou-ji"
    },
    {
      "content": "上天保佑保佑我这个初三的蒟蒻吧！！！\r\n\r\n### Day -N\r\n不开心也不快乐的初赛。普及还算有点顺利，除了某道字符串模拟（尼玛csq是个什么鬼，ccf不讲武德）；提高就比较一言难尽了……\r\n\r\n蒟蒻的表现具体如下：\r\n\r\n- 球的体积公式是 $V=\\frac{4}{3}r^3$，由于太年轻没学过，考场上就记得公式里有个3有个4，于是就记成了$V=\\frac{3}{4}r^3$，好家伙一算，没有这个选项，于是乎当场怀疑人生……\r\n\r\n- 提高组27题错得更冤，明明已经把程序作用（最大子段和）搞出来了，甚至连它两种算法都想出来了，却马失前蹄痛失三分，原因竟是因为我以为输入的```10 -3 2 10 0 -8 9 -4 -5 9 4```是一个单纯的、长度为11的数列，结果人家第一个数“10”，意思是数列长度为10……\r\n\r\n- 提高组程序阅读第三题是个奇怪的字符串，看出来了是个加密和解密，但我懒得去模拟，就全部蒙的；但问题在于，我蒙的所有答案，都他喵的蒙错了。算我点背。\r\n\r\n- 提高组补全程序第一题很简单，第二题……一言难尽。首先题目就没看懂，虽然把做法说了，但我没看懂，最终搞出来了前3道选择题的答案，后三道真的不会，于是乎开始蒙。开心。又是一道都没蒙对。\r\n\r\n太惨了。\r\n\r\n考完普及估分86，出来88.5；提高估分74，出来73.5，不得不说关于估分我还是比较在行的。但本蒟蒻也就估分能一点，其它的想都别想了。\r\n\r\n### Day -1\r\n我们亲爱的各科老师自然也知道我们周末要去打比赛，于是对我们几个给予了亲切的问候和鼓励，以及比往常还多的作业。\r\n\r\n现实逼着我考试那天还带着数学卷子。罪孽啊。\r\n\r\n当然我算是运气比较好的了。众所周知今年SC有两个考点，成都的树德光华和绵阳的东辰国际学校。咱运气比较好，分到树德考试；但同机房的某些大佬run气稍微差一点，于是千里迢迢去绵阳考试了。不过别太担心，某些诸如zyc的大佬还是很乐意跑那么远的，只是因为同行的还有八年级的两个学妹，他终于可以展示自己的学长风范了。\r\n### Day 1\r\n上午入门组，就那样，坐我右边那个人非常拽，做第一题把键盘敲得邦邦响，把本蒟蒻吓得不轻。然后发现他似乎过了半个小时还在敲第一题……\r\n\r\n这就比较尴尬了。\r\n\r\n但本蒟蒻这边也不咋地。T1固然比较简单，T2却写残了。明明可以sort解决的事，我硬要手写一个归并，而且还写错了（艹新键盘用着不习惯，把s1打成s2了，还半天没调出来），又花了四十多分钟。T3嘛……懂得都懂，对于我这种蒟蒻来说简直是一种灾难。对着大样例调，错误那是按下葫芦浮起瓢，改了这边错那边，改得我想问候某些家伙祖宗十八代……又是两个多小时过去了。T4已然没有多少时间了，于是随手打了个暴力，保存完之后Dev卡了，关也关不掉……\r\n\r\n预估得分330左右。\r\n\r\n中午就找了个地方颓了一下文化课，然后打了半个小时盹，然后拖着疲惫的身躯去迎接下午的S组了。\r\n\r\n然后就没找到考场。艹。\r\n\r\n本蒟蒻名字音序十分靠后（Z打头），于是准考证号就特别大，再于是就发现本层楼的准考证号没有我……\r\n\r\n鬼知道我应该去哪里。在其它奇怪的地方找到考室之后，离开考只剩三分钟了。\r\n\r\n草（一种植物），开局不利。\r\n\r\n然后就崩了。T1T3都是写的奇怪的贪心，但由于蒟蒻代码能力太弱，想法是美好的但就是写不对，然后便陷入了和上午一样的境地，这里调完那里错，按下葫芦浮起瓢……\r\n\r\n等肝过两道题的大样例之后，时间又所剩无几了。\r\n\r\n想着交白卷不太好对吧，于是就在T2和T4的代码里写了一行神之代码，这行代码曾在我之前的无数次考试中出现过，成为我在所有考试中使用最频繁的代码之一：\r\n\r\n```cpp\r\nwhile(true)printf(\"本蒟蒻不会做……\\n\");\r\n```\r\n\r\n话说浪费CCF的评测资源会不会被封号啊。\r\n\r\n于是总结下来，提高组得分肯定 $\\le 200$。太菜了。\r\n\r\n蒟蒻就是蒟蒻。太残暴了。\r\n\r\n附：[考场代码](https://files.cnblogs.com/files/blogs/697493/csp2021%E4%BB%A3%E7%A0%81.rar)\r\n\r\n- update 2021.10.30 在网站卡了半个多小时之后，终于看到成绩了。普及380，提高188，提高比预想中低一些（这极有可能导致我与一等失之交臂啊啊）……太悲惨了。\r\n- update 2021.11.05 四川的分数线出来了，不得不说感觉有些许水分。一等线：普及225，提高105（心疼tg考了100分的xsy大佬）。有一丢丢的小激动。\r\n- update 2021.11.06 改题进行时 [S T2](https://www.cnblogs.com/dai-se-can-tian/p/15517971.html);[S T3](https://www.cnblogs.com/dai-se-can-tian/p/15518151.html)\r\n- update 2021.11.15 感觉纸质证书并没有什么卵用，于是要的电子。[证书下载](https://files.cnblogs.com/files/blogs/697493/CSP2021%E8%AF%81%E4%B9%A6.rar)\r\n- update 2021.12.18 一个悲惨的故事……下证书下成初赛的了，而这还是在前几天学校统计证书的时候才发现的，而此时时间已经过了而无法再次下载，合着这么几个月白搞了【悲惨】。",
      "data": {
        "title": "CSP2021游记",
        "date": "2022-10-28 08:40:53",
        "tags": [
          "游记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "csp2021-you-ji"
    },
    {
      "content": "注：原文写于2020.11.15，当时写在洛谷博客上，现在搬run到博客园中……\r\n\r\n~~以下内容为反面教材~~\r\n\r\n# 前言\r\n2020年11月7日，我参加了CSP2020入门组的复赛。考完之后感觉很不好，洛谷评测230，结果出来是270，~~感觉一等是没有希望了~~，但不管怎么说吧，我还是应当好好分析一下这次考试的得失。\r\n\r\n# 试题分析\r\n\r\n## PART 1\r\n[优秀的拆分](https://www.luogu.com.cn/problem/P7071)\r\n\r\n这是一道大水题，据我们考前分析，历届CSP入门组复赛第一题的难度成递减趋势（看2019年第一题[数字游戏](https://www.luogu.com.cn/problem/P5660)就知道了）。~~本人当时做得也比较顺利，直接AC。~~\r\n\r\n这道题就是一道转二进制的题，多的不想说，直接贴代码（加了文件输入输出的原版代码）：\r\n```cpp\r\n#include<cstdio>\r\n\r\nint main(){\r\n\t\r\n\tfreopen(\"power.in\",\"r\",stdin);\r\n\tfreopen(\"power.out\",\"w\",stdout);\r\n\t\r\n\tint a;\r\n\tscanf(\"%d\",&a);\r\n\tif(a%2==1){\r\n\t\tprintf(\"-1\");\r\n\t\treturn 0;\r\n\t}\r\n\tint now=1;\r\n\twhile(now<=a)now*=2;\r\n\tnow/=2;\r\n\twhile(a>0){\r\n\t\tif(a>=now){\r\n\t\t\tprintf(\"%d \",now);\r\n\t\t\ta-=now;\r\n\t\t}\r\n\t\tnow/=2;\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n```\r\n\r\n## PART 2\r\n[直播获奖](https://www.luogu.com.cn/problem/P7072)\r\n\r\n~~相当于是半道水题~~。\r\n\r\n刚开始以为是排序题，一看数据规模，N到了10的5次方，O(N×N)的算法直接凉凉（某同学就是因为没看数据规模从而只剩40分）。\r\n\r\n再一看，每个选手的成绩为不超过600的正整数，于是乎，我想到了桶排。每输入一个成绩，对应的sum＋1，在从后往前扫一遍直到人数满足要求。复杂度为O(KN)，（K是一个不超过600的常数）。轻松AC。\r\n\r\n相较来看，比去年[公交换乘](https://www.luogu.com.cn/problem/P5661)至少从代码量上来说要简单得多。\r\n\r\n贴代码（同上，原版代码）：\r\n```cpp\r\n#include<cstdio>\r\n#define N 605\r\n\r\nint num,k,a,sum[N];\r\n\r\nint main(){\r\n\t\r\n\tfreopen(\"live.in\",\"r\",stdin);\r\n\tfreopen(\"live.out\",\"w\",stdout);\r\n\t\r\n\tscanf(\"%d%d\",&num,&k);\r\n\tfor(int i=1;i<=num;i++){\r\n\t\tscanf(\"%d\",&a);\r\n\t\tsum[a]++;\r\n\t\tint now=0,m=i*k/100>0?i*k/100:1;\r\n\t\tfor(int j=602;j>=0;j--){\r\n\t\t\tnow+=sum[j];\r\n\t\t\tif(now>=m){\r\n\t\t\t\tprintf(\"%d \",j);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n```\r\n\r\n## PART 3\r\n[表达式](https://www.luogu.com.cn/problem/P7073)\r\n\r\n~~考场上的我，年少轻狂，自以为想出了二叉树就能拿满，结果成为这次考试最大的遗憾~~，然后65分。\r\n\r\n本蒟蒻不喜欢字符串，非常不喜欢字符串，~~想当年做中缀表达式求值一类的字符串题时痛苦的不得了。~~\r\n\r\n于是，这道题也不例外。\r\n\r\n写了半天读入字符串的代码，有绕了半天求值。的确，我把那棵二叉树建出来了，但我估计是写法的常数复杂度太高，于是炸掉了。\r\n\r\n相比于去年第三题的变型背包[纪念品](https://www.luogu.com.cn/problem/P5662)，今年的第三题难了不少。\r\n\r\n贴上代码，虽然有点不好意思，但那也是我辛辛苦苦写出来的，这道题的代码我删了freopen，并加了一些注释，以方便大家理解当时的我的做法：\r\n\r\n```cpp\r\n#include<cstdio>\r\n#include<stack>\r\n#define N 100005\r\nusing namespace std;\r\n\r\nbool a[N];\r\nint m,q,e[N*10],ere[N],top,root;\r\n//在e数组中，0代表!，-1代表&，-2代表|，正整数代表x的下标 \r\n\r\nchar w;\r\nint read(){\r\n    char in=getchar();\r\n    if(in=='\\n')return -1;//读到回车返回-1 \r\n    while(in==' ')in=getchar();//过滤掉多余空格 \r\n    if(in!='x'){//如果是二元运算符返回0 \r\n        w=in;\r\n        return 0;\r\n    }\r\n    else{//否则返回这个xi代表的i \r\n        int b=0;\r\n        in=getchar();//丢弃'x'字符 \r\n        while(in>='0'&&in<='9'){//当读到数字时重复 \r\n            b*=10;\r\n            b+=(in-'0');\r\n            in=getchar();\r\n        }\r\n        return b;\r\n    }\r\n}\r\n\r\nstruct tree{\r\n    int data,lc,rc,fa;\r\n}t[N*10];\r\nstack<int>zt;\r\nbool f[N*10];//f[i]代表第i个部分为树根的子树的初值 \r\nvoid dfs(int wh){\r\n    if(e[wh]>0){\r\n        f[wh]=a[e[wh]];\r\n        return;\r\n        //如果是数字，直接返回它的值 \r\n    }\r\n    if(e[wh]==0){//如果是！运算，返回取反后的左子树的值 \r\n        dfs(t[wh].lc);\r\n        f[wh]=!f[t[wh].lc];\r\n    }\r\n    else if(e[wh]==-1){//如果是&运算 \r\n        dfs(t[wh].lc);\r\n        dfs(t[wh].rc);\r\n        f[wh]=f[t[wh].lc]&&f[t[wh].rc];\r\n    }\r\n    else{//如果是|运算 \r\n        dfs(t[wh].lc);\r\n        dfs(t[wh].rc);\r\n        f[wh]=f[t[wh].lc]||f[t[wh].rc];\r\n    }\r\n    return;\r\n}\r\n\r\n//find_ans(wh,last,l_d)  代表现在要求以wh为根节点的树的值的位置\r\n//并且上一棵子树的根节点为last，上一棵子树的值为l_d \r\nbool find_ans(int wh,int last,bool l_d){\r\n    if(wh==0)return l_d;//如果wh为0，意味着它是根节点的父亲，直接返回l_d \r\n    if(e[wh]==0){\r\n        return find_ans(t[wh].fa,wh,!l_d);\r\n        //如果是!运算，直接返回取反后的被影响过的子树的值 \r\n    }\r\n    if(e[wh]==-1){//如果是&运算 \r\n        int ch=t[wh].lc,other=t[wh].rc;\r\n        //ch为变化过的子树的根，other是没变过的 \r\n        if(ch!=last)ch=t[wh].rc,other=t[wh].lc;\r\n        //如果发现ch不等于带过来的last，交换 \r\n        return find_ans(t[wh].fa,wh,f[other]&&l_d);\r\n    }\r\n    if(e[wh]==-2){//如果是|运算 \r\n        int ch=t[wh].lc,other=t[wh].rc;\r\n        if(ch!=last)ch=t[wh].rc,other=t[wh].lc;\r\n        //同上 \r\n        return find_ans(t[wh].fa,wh,f[other]||l_d);\r\n    }\r\n}\r\n\r\nint main(){\r\n\r\n    int r=read();//输入表达式的第一个部分 \r\n    while(r!=-1){//当表达式没到回车时 \r\n        if(r>0){//如果是数字 \r\n            e[++top]=r;\r\n            ere[r]=top;\r\n            //ere[i]代表xi在e数组里的下标 \r\n        }\r\n        if(r==0){//如果是运算符 \r\n            if(w=='!')e[++top]=0;\r\n            else if(w=='&')e[++top]=-1;\r\n            else if(w=='|')e[++top]=-2;\r\n        } \r\n        r=read();\r\n    }\r\n\r\n    int in;\r\n    scanf(\"%d\",&m);\r\n    for(int i=1;i<=m;i++){\r\n        scanf(\"%d\",&in);\r\n        if(in==1)a[i]=true;\r\n        else a[i]=false;\r\n    }//读入每个变量的初值，xi的初值为a[i] \r\n\r\n    //建树 \r\n    for(int i=1;i<=top;i++){//遍历每一个部分 \r\n        t[i].data=e[i];//记录第i个节点的data \r\n        if(e[i]<=0){//如果是运算符 \r\n            if(e[i]==0){//如果是！运算 \r\n                int now=zt.top();\r\n                zt.pop(); \r\n                t[now].fa=i;\r\n                t[i].lc=now;\r\n                //则栈顶元素的父亲是该元素 \r\n            }\r\n            else{//如果是&或|运算 \r\n                int s1=zt.top();\r\n                zt.pop();\r\n                int s2=zt.top();\r\n                zt.pop();\r\n                t[s1].fa=t[s2].fa=i;\r\n                t[i].lc=s1;\r\n                t[i].rc=s2;\r\n                //则栈顶的两个元素的父亲都是该元素 \r\n            }\r\n        }\r\n        zt.push(i);//把该元素的下标压栈 \r\n    }\r\n\r\n    for(int i=1;i<=top;i++){\r\n        if(t[i].fa<=0){\r\n            root=i;\r\n            break;\r\n            //找到一个父亲为初始值（0）的节点\r\n            //那么它就是根节点，等会进行dfs求初值时要用 \r\n        }\r\n    }\r\n    dfs(root);//进行dfs求初值 \r\n\r\n    scanf(\"%d\",&q);\r\n    while(q--){\r\n        int u;//输入每一个问题 \r\n        scanf(\"%d\",&u);\r\n        if(find_ans(t[ere[u]].fa,ere[u],!a[u]))printf(\"1\\n\");\r\n        else printf(\"0\\n\");\r\n        //输出整个表达式的值(即是以根节点为树根的表达式的值) \r\n    }\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n## PART 4\r\n\r\n[方格取数](https://www.luogu.com.cn/problem/P7074)\r\n\r\n我以为这道题是贪心的做法（毕竟数据规模摆在那里的，基本上要用O(M×N)的算法才能过），然后贪了半天没贪出来，于是乎只能垂头丧气地写了一个爆搜，结果莫名其妙地爆零了。\r\n\r\n啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊\r\n\r\n同班的说这道题很简单，我却直接爆零了！！！\r\n\r\n然后请教了某些大神，发现读错题了，~~把可以向上下右看成可以上下左右了。~~\r\n\r\n~~心情极度郁闷~~，但最后竟然还有5分，也不知道哪里来的。\r\n\r\n我觉得吧，去年最后一题[加工零件](https://www.luogu.com.cn/problem/P5663)对我而言要友好得多，那道题暴力随便50，用了图论或者DP的话要AC也不难。只能说本蒟蒻生不逢时，或者是修炼的不够。\r\n\r\n代码就不贴出来了吧，~~0分代码就不放出来丢人现眼了。~~\r\n\r\n# 总结\r\n从这次考试中还是能说明很多问题的，包括考试技巧、知识掌握等等等等。\r\n\r\n总之，在接下来的一年里努力吧。\r\n\r\nCSP2021提高组见，希望那时的我能比现在的我做得更好。",
      "data": {
        "title": "CSP2020探险记",
        "date": "2022-10-28 08:18:58",
        "tags": [
          "游记"
        ],
        "published": true,
        "hideInList": false,
        "feature": null,
        "isTop": false
      },
      "isEmpty": false,
      "excerpt": "",
      "abstract": "",
      "fileName": "csp2020-tan-xian-ji"
    }
  ],
  "tags": [
    {
      "index": -1,
      "name": "笔记",
      "slug": "Q62yZoEse",
      "used": true
    },
    {
      "index": -1,
      "name": "游记",
      "slug": "B3oQkZosI",
      "used": true
    }
  ],
  "menus": []
}